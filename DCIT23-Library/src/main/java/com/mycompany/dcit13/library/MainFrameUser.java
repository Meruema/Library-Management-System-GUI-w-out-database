/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.dcit13.library;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author mjeno
 */
public class MainFrameUser extends javax.swing.JFrame {
    
    private List<Book> borrowedBooks; // List to track borrowed books
    private List<Book> books; // List to store all books in the library
    private DefaultTableModel tableModel;
    private int selectedRow = -1;  // To keep track of the selected row
    /**
     * Creates new form MainFrameAdmin
     */
    public MainFrameUser() {
        initComponents();
        
        borrowedBooks = new ArrayList<>();
        books = LibraryData.getInstance().getBooks(); // Initialize books list
        
        // Add panels to mainPanel with correct card names
        mainPanel.add(panelBorrowBook, "card7");
        mainPanel.add(panelSearchBooks, "card6");
        mainPanel.add(panelReturnBooks, "card8");
        
        // Initialize the table model
        tableModel = (DefaultTableModel) jTable1.getModel();
        
        // Load initial borrowed books if needed (from LibraryData)
        updateBooksTable();
        
        // Add MouseListener to jTable1
        jTable1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                int row = jTable1.rowAtPoint(evt.getPoint());
                if (row >= 0) {
                    selectedRow = row;
                }
            }
        });
        
        // Add MouseListener to jTable2
        jTable2.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                int row = jTable2.rowAtPoint(evt.getPoint());
                if (row >= 0) {
                    selectedRow = row;
                }
            }
        });
        
        // Initial setup of the table model for jTable3
        DefaultTableModel tableModel3 = new DefaultTableModel(
            new Object[]{"ISBN", "Title", "Genre", "Author", "Quantity"}, 0
        );
        jTable3.setModel(tableModel3);
        
        // ActionListener for the search button
        btnSearchBook1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                searchBooks();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        btnBorrowBook = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        btnSearchBook = new javax.swing.JButton();
        btnReturnBook = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        panelBorrowBook = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        btnBorrowBook1 = new javax.swing.JButton();
        panelReturnBooks = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btnReturnBook1 = new javax.swing.JButton();
        jDateBorrowed = new com.toedter.calendar.JDateChooser();
        jDateReturned = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panelSearchBooks = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        btnSearchBook1 = new javax.swing.JButton();
        jComboGenre = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(255, 211, 218));

        btnBorrowBook.setBackground(new java.awt.Color(229, 116, 143));
        btnBorrowBook.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnBorrowBook.setText("Borrow Book");
        btnBorrowBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowBookActionPerformed(evt);
            }
        });

        btnLogOut.setBackground(new java.awt.Color(229, 116, 143));
        btnLogOut.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnSearchBook.setBackground(new java.awt.Color(229, 116, 143));
        btnSearchBook.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnSearchBook.setText("Search Books");
        btnSearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBookActionPerformed(evt);
            }
        });

        btnReturnBook.setBackground(new java.awt.Color(229, 116, 143));
        btnReturnBook.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnReturnBook.setText("Return Book");
        btnReturnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnBorrowBook, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrowBook, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        mainPanel.setLayout(new java.awt.CardLayout());

        panelBorrowBook.setBackground(new java.awt.Color(242, 174, 190));

        jTable1.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ISBN", "Title", "Genre", "Author", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel7.setFont(new java.awt.Font("Leelawadee UI", 1, 48)); // NOI18N
        jLabel7.setText("Borrow Book");

        btnBorrowBook1.setBackground(new java.awt.Color(229, 116, 143));
        btnBorrowBook1.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnBorrowBook1.setText("Borrow Book");
        btnBorrowBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowBook1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorrowBookLayout = new javax.swing.GroupLayout(panelBorrowBook);
        panelBorrowBook.setLayout(panelBorrowBookLayout);
        panelBorrowBookLayout.setHorizontalGroup(
            panelBorrowBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorrowBookLayout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addGroup(panelBorrowBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorrowBookLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(605, 605, 605))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorrowBookLayout.createSequentialGroup()
                        .addComponent(btnBorrowBook1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(613, 613, 613))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorrowBookLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195))))
        );
        panelBorrowBookLayout.setVerticalGroup(
            panelBorrowBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorrowBookLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBorrowBook1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        mainPanel.add(panelBorrowBook, "card7");

        panelReturnBooks.setBackground(new java.awt.Color(242, 174, 190));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Title", "Genre", "Author"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel8.setFont(new java.awt.Font("Leelawadee UI", 1, 48)); // NOI18N
        jLabel8.setText("Return Books");

        btnReturnBook1.setBackground(new java.awt.Color(229, 116, 143));
        btnReturnBook1.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnReturnBook1.setText("Return Book");
        btnReturnBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnBook1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel1.setText("Date Borrowed");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel2.setText("Date Returned");

        javax.swing.GroupLayout panelReturnBooksLayout = new javax.swing.GroupLayout(panelReturnBooks);
        panelReturnBooks.setLayout(panelReturnBooksLayout);
        panelReturnBooksLayout.setHorizontalGroup(
            panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReturnBooksLayout.createSequentialGroup()
                .addGroup(panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReturnBooksLayout.createSequentialGroup()
                        .addGap(638, 638, 638)
                        .addComponent(jLabel8))
                    .addGroup(panelReturnBooksLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReturnBooksLayout.createSequentialGroup()
                        .addGroup(panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelReturnBooksLayout.createSequentialGroup()
                                .addGap(204, 204, 204)
                                .addComponent(jLabel1))
                            .addGroup(panelReturnBooksLayout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelReturnBooksLayout.createSequentialGroup()
                        .addGroup(panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelReturnBooksLayout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addGroup(panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateReturned, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateBorrowed, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelReturnBooksLayout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(btnReturnBook1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 187, Short.MAX_VALUE))))
        );
        panelReturnBooksLayout.setVerticalGroup(
            panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReturnBooksLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(panelReturnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelReturnBooksLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateReturned, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateBorrowed, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(btnReturnBook1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(82, 82, 82))
        );

        mainPanel.add(panelReturnBooks, "card4");

        panelSearchBooks.setBackground(new java.awt.Color(242, 174, 190));

        jTable3.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ISBN", "Title", "Genre", "Author", "Quantity"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel9.setFont(new java.awt.Font("Leelawadee UI", 1, 48)); // NOI18N
        jLabel9.setText("Search Book");

        btnSearchBook1.setText("Search");
        btnSearchBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBook1ActionPerformed(evt);
            }
        });

        jComboGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Genre", "Fiction", "Fantasy", "Action", "Comedy", "Warewolf", "Romance" }));

        javax.swing.GroupLayout panelSearchBooksLayout = new javax.swing.GroupLayout(panelSearchBooks);
        panelSearchBooks.setLayout(panelSearchBooksLayout);
        panelSearchBooksLayout.setHorizontalGroup(
            panelSearchBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchBooksLayout.createSequentialGroup()
                .addContainerGap(262, Short.MAX_VALUE)
                .addGroup(panelSearchBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelSearchBooksLayout.createSequentialGroup()
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)
                            .addComponent(jComboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(btnSearchBook1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchBooksLayout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(174, 174, 174)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchBooksLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(610, 610, 610))))
        );
        panelSearchBooksLayout.setVerticalGroup(
            panelSearchBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchBooksLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel9)
                .addGap(39, 39, 39)
                .addGroup(panelSearchBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch)
                    .addGroup(panelSearchBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearchBook1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        mainPanel.add(panelSearchBooks, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // CLICK BUTTON - Borrow
    private void btnBorrowBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowBook1ActionPerformed
        borrowBook();
    }//GEN-LAST:event_btnBorrowBook1ActionPerformed

    // NAVBAR - Search
    private void btnSearchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBookActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        System.out.println("Showing panelSearchBooks");
        card.show(mainPanel, "card6");
        
        updateBorrowedTable();
    }//GEN-LAST:event_btnSearchBookActionPerformed

    // NAVBAR - Log Out
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        Login login = new Login();
        login.setVisible(true);
        this.dispose(); // Close the current login frame
    }//GEN-LAST:event_btnLogOutActionPerformed

    // NAVBAR - Borrow
    private void btnBorrowBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowBookActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        System.out.println("Showing panelSearchBooks");
        card.show(mainPanel, "card7");

        // Refresh the table with the current books
        updateBooksTable();
    }//GEN-LAST:event_btnBorrowBookActionPerformed

    // NAVBAR - Return
    private void btnReturnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnBookActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        System.out.println("Showing panelReturnBook");
        card.show(mainPanel, "card8");

        // Refresh the table with the current books
        updateBorrowedTable();
    }//GEN-LAST:event_btnReturnBookActionPerformed
    
    // CLICK BUTTON - Return
    private void btnReturnBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnBook1ActionPerformed
        returnBook();
    }//GEN-LAST:event_btnReturnBook1ActionPerformed
    
    // CLICK BUTTON - Search
    private void btnSearchBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBook1ActionPerformed
        searchBooks();
    }//GEN-LAST:event_btnSearchBook1ActionPerformed
    
    // Method to handle borrowing a book
    private void borrowBook() {
        if (selectedRow >= 0 && selectedRow < books.size()) {
        Book selectedBook = books.get(selectedRow);

        if (LibraryData.getInstance().borrowBook(selectedBook)) {
            borrowedBooks.add(selectedBook);
            books.remove(selectedBook); // Remove from the all books list
            updateBorrowedTable(); // Update jTable2 to reflect borrowed books
            updateBooksTable(); // Update jTable1 to reflect available books
            JOptionPane.showMessageDialog(this, "Book borrowed successfully!");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to borrow book. Quantity may be insufficient.");
        }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a book to borrow.");
        }
    }
    
    // Method to update the jTable1 with available books
    private void updateBooksTable() {
        DefaultTableModel tableModel1 = (DefaultTableModel) jTable1.getModel();
        tableModel1.setRowCount(0); // Clear previous rows
        for (Book book : books) {
            Object[] row = {book.getIsbn(), book.getTitle(), book.getGenre(), book.getAuthor(), book.getQuantity()};
            tableModel1.addRow(row);
        }
    }
    
    // Method to handle returning a book
    private void returnBook() {
        if (selectedRow >= 0 && selectedRow < borrowedBooks.size()) { // if may laman yung row
        Book selectedBook = borrowedBooks.get(selectedRow);

        // Assuming jDateChooserBorrowed and jDateChooserReturned are your JDateChooser components
        Date borrowedDate = jDateBorrowed.getDate();
        Date returnDate = jDateReturned.getDate();

        if (borrowedDate != null && returnDate != null) {
            // Calculate the difference in milliseconds
            long diffInMillies = Math.abs(returnDate.getTime() - borrowedDate.getTime());
            // Convert to days
            long diffInDays = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);

            if (diffInDays <= 7) {
                // No fee if returned within 7 days
                JOptionPane.showMessageDialog(this, "No fee, book returned successfully!");
                processBookReturn(selectedBook);
            } else {
                // Fee if returned after more than 7 days
                int option = JOptionPane.showConfirmDialog(this, "50 pesos fee, please pay", "Late Fee", JOptionPane.OK_CANCEL_OPTION);
                if (option == JOptionPane.OK_OPTION) {
                    JOptionPane.showMessageDialog(this, "Payment received. Book returned successfully!");
                    processBookReturn(selectedBook);
                } else {
                    JOptionPane.showMessageDialog(this, "Return cancelled. Please pay the fee to return the book.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select both borrowed and return dates.");
        }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a borrowed book to return.");
        }
    }
    
    // Method to process the book return
    private void processBookReturn(Book selectedBook) {
        if (LibraryData.getInstance().returnBook(selectedBook)) {
        borrowedBooks.remove(selectedBook); // Remove from borrowedBooks list
        books.add(selectedBook); // Add back to available books list
        updateBorrowedTable(); // Update jTable2 display for borrowed books
        updateBooksTable(); // Update jTable1 display for available books
        } else {
            JOptionPane.showMessageDialog(this, "Failed to return book.");
        }
    }
    
    // Method to update the jTable2 with borrowed books
    private void updateBorrowedTable() {
        DefaultTableModel tableModel2 = (DefaultTableModel) jTable2.getModel();
        tableModel2.setRowCount(0); // Clear previous rows
        for (Book book : borrowedBooks) {
            Object[] row = {book.getIsbn(), book.getTitle(), book.getGenre(), book.getAuthor(), book.getQuantity()};
            tableModel2.addRow(row);
        }
    }
    
    // Method to search and filter books
    private void searchBooks() {
        String searchText = txtSearch.getText().trim().toLowerCase();
        String selectedGenre = (String) jComboGenre.getSelectedItem();
        
        // Filtered list to hold search results
        List<Book> filteredBooks = new ArrayList<>();
        
        for (Book book : books) {
            boolean matchesSearchText = searchText.isEmpty() || 
                                         book.getIsbn().toLowerCase().contains(searchText) || 
                                         book.getTitle().toLowerCase().contains(searchText) || 
                                         book.getAuthor().toLowerCase().contains(searchText);
            
            boolean matchesGenre = selectedGenre == null || selectedGenre.equals("Select Genre") || 
                                   book.getGenre().equalsIgnoreCase(selectedGenre);
            
            if (matchesSearchText && matchesGenre) {
                filteredBooks.add(book);
            }
        }
        
        updateSearchTable(filteredBooks);
    }
    
    // Method to update the jTable3 with search results
    private void updateSearchTable(List<Book> filteredBooks) {
        DefaultTableModel tableModel = (DefaultTableModel) jTable3.getModel();
        tableModel.setRowCount(0); // Clear previous rows

        for (Book book : filteredBooks) {
            Object[] row = {book.getIsbn(), book.getTitle(), book.getGenre(), book.getAuthor(), book.getQuantity()};
            tableModel.addRow(row);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrameUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrowBook;
    private javax.swing.JButton btnBorrowBook1;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnReturnBook;
    private javax.swing.JButton btnReturnBook1;
    private javax.swing.JButton btnSearchBook;
    private javax.swing.JButton btnSearchBook1;
    private javax.swing.JComboBox<String> jComboGenre;
    private com.toedter.calendar.JDateChooser jDateBorrowed;
    private com.toedter.calendar.JDateChooser jDateReturned;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelBorrowBook;
    private javax.swing.JPanel panelReturnBooks;
    private javax.swing.JPanel panelSearchBooks;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
